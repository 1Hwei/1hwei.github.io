<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://1hwei.github.io/</id>
    <title>Gridea</title>
    <updated>2019-10-11T05:54:29.492Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://1hwei.github.io/"/>
    <link rel="self" href="https://1hwei.github.io//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://1hwei.github.io//images/avatar.png</logo>
    <icon>https://1hwei.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[iOS "NSURLConnection finished with error - code -1022" 问题]]></title>
        <id>https://1hwei.github.io//post/ios-nsurlconnection-finished-with-error-code-1022-wen-ti</id>
        <link href="https://1hwei.github.io//post/ios-nsurlconnection-finished-with-error-code-1022-wen-ti">
        </link>
        <updated>2019-10-11T05:52:06.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>问题<br>
在访问一个接口时网络返回error，返回错误码Code = -1022.</li>
<li>原因<br>
这是因为iOS9以后，需要APP的网络协议里面都必须使用https协议！这与接口中的http不兼容</li>
<li>解决<br>
在工程的plist文件中,新增一个属性<br>
1.字典 NSAppTransportSecurity<br>
2.在NSAppTransportSecurity下添加NSAllowsArbitraryLoads类型Boolean,值设为YES<br>
<img src="https://1hwei.github.io//post-images/1570773261993.png" alt=""></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sublime Text3 不安装插件设置代码自动缩进对齐]]></title>
        <id>https://1hwei.github.io//post/sublime-text3-bu-an-zhuang-cha-jian-she-zhi-dai-ma-zi-dong-suo-jin-dui-qi</id>
        <link href="https://1hwei.github.io//post/sublime-text3-bu-an-zhuang-cha-jian-she-zhi-dai-ma-zi-dong-suo-jin-dui-qi">
        </link>
        <updated>2019-08-25T04:36:56.000Z</updated>
        <content type="html"><![CDATA[<p>在Preferences-&gt;Key Bingdings<br>
<img src="https://1hwei.github.io//post-images/1566707932410.png" alt=""><br>
添加代码</p>
<pre><code>{&quot;keys&quot;: [&quot;ctrl+shift+q&quot;], 
&quot;command&quot;: &quot;reindent&quot; , 
&quot;args&quot;:{&quot;single_line&quot;: false}},
]
</code></pre>
<p><img src="https://1hwei.github.io//post-images/1566708075602.png" alt=""><br>
按cmd +a 全选，后ctrl+shift+q即可自动缩进，整理代码<br>
效果如下：<br>
<img src="https://1hwei.github.io//post-images/1566708555088.gif" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[问题：SWIFT_VERSION '5.0' is unsupported, supported versions are: 3.0, 4.0, 4.2. (in target 'XXX')]]></title>
        <id>https://1hwei.github.io//post/wen-ti-swift_version-50-is-unsupported-supported-versions-are-30-40-42-in-target-xxx</id>
        <link href="https://1hwei.github.io//post/wen-ti-swift_version-50-is-unsupported-supported-versions-are-30-40-42-in-target-xxx">
        </link>
        <updated>2019-08-20T13:59:30.000Z</updated>
        <content type="html"><![CDATA[<p>##原因<br>
这个项目是用之前的Swift版本做的，现在用最新版的Xcode打开之后，用的是最新版的Swift5版本进行编译，所以不兼容。<br>
<img src="https://1hwei.github.io//post-images/1566309758799.png" alt=""><br>
##解决方法：<br>
点击主项目-BulidSetting-搜swift-Swift Language Version改成低版本<br>
<img src="https://1hwei.github.io//post-images/1566309708366.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ hexo+github搭建免费个人博客教程-markdown版]]></title>
        <id>https://1hwei.github.io//post/hexogithub-da-jian-mian-fei-ge-ren-bo-ke-jiao-cheng</id>
        <link href="https://1hwei.github.io//post/hexogithub-da-jian-mian-fei-ge-ren-bo-ke-jiao-cheng">
        </link>
        <updated>2019-08-18T16:03:12.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1下载软件">1.下载软件</h2>
<ul>
<li>安装node.js</li>
<li>安装git</li>
</ul>
<h2 id="2申请github账号">2.申请GitHub账号</h2>
<h2 id="3安装hexo打开命令行输入">3.安装Hexo，打开命令行，输入</h2>
<blockquote>
<p>npm install -g hexo-cli</p>
</blockquote>
<p>下载完成后，建议同时安装hexo-deployer-git</p>
<blockquote>
<p>npm install hexo-deployer-git --save<br>
直接执行hexo d的话一般会报如下错误</p>
</blockquote>
<p><code>Deployer not found: github 或者 Deployer not found: git</code></p>
<p>则执行</p>
<blockquote>
<p>npm cache clean --force</p>
</blockquote>
<p>然后</p>
<blockquote>
<p>npm install -g @angular/cli</p>
</blockquote>
<h2 id="4一次执行">4.一次执行</h2>
<pre><code>cd /d/bolg #到目录下
hexo init  #创建文件夹
hexo g # 生成
hexo s # 启动服务
</code></pre>
<h2 id="5访问本地博客localhost4000">5，访问<a href="">本地博客</a>localhost:4000</h2>
<p>图片</p>
<h2 id="6获取ssh-key">6.获取ssh key</h2>
<blockquote>
<p>cd ~/. ssh #检查本机已存在的ssh密钥</p>
</blockquote>
<p>如果提示：No such file or directory 说明你是第一次使用git。</p>
<blockquote>
<p>ssh-keygen -t rsa -C &quot;邮件地址&quot;</p>
</blockquote>
<p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：名称自己随意填</p>
<p><code>测试是否成功</code></p>
<blockquote>
<p>ssh -T git@github.com # 注意邮箱地址不用改</p>
</blockquote>
<p><code>Hi XXX! You've successfully authenticated, but GitHub does not provide shell access.</code></p>
<p>看到这个信息说明SSH已配置成功！</p>
<p>此时你还需要配置：</p>
<pre><code>git config --global user.name &quot;liuxianan&quot;// 你的github用户名，非昵称
git config --global user.email  &quot;xxx@qq.com&quot;// 填写你的github注册邮箱
</code></pre>
<h2 id="7修改_configyml文件">7.修改_config.yml文件</h2>
<p>theme: landscape改为theme: 你下载好到主题<br>
language: zh-CN<br>
repo：粘贴github仓库下的ssh地址</p>
<pre><code>deploy:
type: git
repo: git@github.com:xxx/xxx.github.io.git
branch: master
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[iOS 详细解释@property和@synthesize关键字]]></title>
        <id>https://1hwei.github.io//post/ios-xiang-xi-jie-shi-property-he-synthesize-guan-jian-zi</id>
        <link href="https://1hwei.github.io//post/ios-xiang-xi-jie-shi-property-he-synthesize-guan-jian-zi">
        </link>
        <updated>2019-08-15T13:01:51.000Z</updated>
        <content type="html"><![CDATA[<p><strong>注意：由@property声明的属性 在类方法中通过下划线是获取不到的 必须是通过 对象名.属性 才能获取到！</strong><br>
/**<br>
@property和@synthesize关键字是针对成员变量以及get/set方法而言的</p>
<p>从Xcode4.4以后@property已经独揽了@synthesize的功能主要有三个作用：</p>
<p>(1)生成了成员变量get/set方法的声明<br>
(2)生成了私有的带下划线的的成员变量因此子类不可以直接访问，但是可以通过get/set方法访问。那么如果想让定义的成员变量让子类直接访问那么只能在.h文件中定义成员　　　　变量了，因为它默认是@protected<br>
(3)生成了get/set方法的实现</p>
<p>注意：<br>
如果已经手动实现了get和set方法的话Xcode不会再自动生成带有下划线的私有成员变量了<br>
因为xCode自动生成成员变量的目的就是为了根据成员变量而生成get/set方法的<br>
但是如果get和set方法缺一个的话都会生成带下划线的变量</p>
<p>在Xcode4.4版本之前@property和@synthesize的功能是独立分工的：</p>
<pre><code>@property的作用是：自动的生成成员变量set/get方法的声明如代码：
    @property int age; 它的作用和下面两行代码的作用一致
    - (void)setAge:(int)age;
    - (int)age;
注意：属性名称不要加前缀_ 否则生成的get/set方法中也会有下划线


@synthesize的作用是实现@property定义的方法代码如：
    @synthesize age
    将@property中定义的属性自动生成get/set的实现方法而且默认访问成员变量age

    如果指定访问成员变量_age的话代码如：
    @synthesize age = _age；意思是：
    把@property中声明的age成员变量生成get/set实现方法，并且在实现方法内部
    访问_age这个成员变量，也就意味着给成员 _age 赋值
</code></pre>
<p>注意：访问成员变量 _age 如果在.h文件中没有定义_age成员变量的话，就会在.m文件中自动生成@private类型的成员变量_age</p>
<p>*/</p>
<pre><code>
#import &lt;Foundation/Foundation.h&gt;

@interface Person : NSObject
{
    int _age;
    
}

@property int age;

// 成员变量 _age get/set方法的声明 (xCode 4.4之前)

//- (void)setAge:(int)age;
//- (int)age;

// 验证方法
- (void)test;
- (void)setWeight:(int)weight;
- (int)weight;

@property int _age;

// 属性中带有下划线 _ 那么生成的get/set也会有下划线 _
//- (void)set_age:(int)_age;
//- (int)_age;

@property NSString *name;
@end

/********************Person.m文件***********************************/
#import &quot;Person.h&quot;
@implementation Person

@synthesize age = _age;

/*
 @synthesize age = _age; 和下面的代码效果一致
 - (void)setAge:(int)age
 {
 _age = age;
 }
 
 - (int)age
 {
 return _age;
 }
 */


// 在.h文件中没有声明成员变量_age 但是@synthesize age = _age 自动生成了私有的成员变量 _age
- (void)test
{
    NSLog(@&quot;%d&quot;,_age);
}
@end
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一个工程中，Xcode怎么打开多个窗口或者标签]]></title>
        <id>https://1hwei.github.io//post/yi-ge-gong-cheng-zhong-xcode-zen-me-da-kai-duo-ge-chuang-kou-huo-zhe-biao-qian</id>
        <link href="https://1hwei.github.io//post/yi-ge-gong-cheng-zhong-xcode-zen-me-da-kai-duo-ge-chuang-kou-huo-zhe-biao-qian">
        </link>
        <updated>2019-08-13T16:37:10.000Z</updated>
        <content type="html"><![CDATA[<p>假定你使⽤用的是Macbook Air等屏幕相对⽐比较⼩小的Mac电脑，那么会经常感觉⾃己的屏幕 空间太小，特别是有多个视图控制器的时候。<br>
那么Xcode提供了⼀一个类似Safari 浏览器Tab的概念。也就是可以在一个界⾯面中打开多个⼦界面，然后可以轻松跳转而互不影响。</p>
<pre><code>···
</code></pre>
<p><img src="https://1hwei.github.io//post-images/1565714783853.png" alt=""><br>
1. <img src="https://1hwei.github.io//post-images/1565714831165.png" alt=""><br>
2. 快捷键：command + T<br>
3. 快速在tab中切换：Ctrl +Tab<br>
4. 在xcode中实现分屏<br>
<img src="https://1hwei.github.io//post-images/1565715044651.png" alt=""><br>
只需要这样<br>
<img src="https://1hwei.github.io//post-images/1565715234431.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[UISlider的使用]]></title>
        <id>https://1hwei.github.io//post/uislider-de-shi-yong</id>
        <link href="https://1hwei.github.io//post/uislider-de-shi-yong">
        </link>
        <updated>2019-08-09T19:02:57.000Z</updated>
        <content type="html"><![CDATA[<pre><code>UISlider * slider = [[UISlider alloc]initWithFrame:CGRectMake(10 , 100, 300, 50)];
    //01.minimumValue  : 当值可以改变时，滑块可以滑动到最小位置的值，默认为0.0
    slider.minimumValue = 0.0;
    
    //02.maximumValue : 当值可以改变时，滑块可以滑动到最大位置的值，默认为1.0
    slider.maximumValue = 100.0;
    
    //03.当前值
    slider.value = 50;
    
    //04.continuous : 如果设置YES，在拖动滑块的任何时候，滑块的值都会改变。默认设置为YES
    [slider setContinuous:YES];
    
    //05.滑块条最小值处设置的图片，默认为nil
    slider.minimumValueImage = [UIImage imageNamed:@&quot;001.jpeg&quot;];
    
    //06.滑块条最大值处设置的图片，默认为nil
    slider.maximumValueImage = [UIImage imageNamed:@&quot;001.jpeg&quot;];
    
    //07.minimumTrackTintColor : 小于滑块当前值滑块条的颜色，默认为蓝色
    slider.minimumTrackTintColor = [UIColor redColor];
    
    //08.maximumTrackTintColor: 大于滑块当前值滑块条的颜色，默认为白色
    slider.maximumTrackTintColor = [UIColor blueColor];
    
    //09.thumbTintColor : 当前滑块的颜色，默认为白色
    slider.thumbTintColor = [UIColor yellowColor];
    
//    10.currentMaximumTrackImage : 滑块条最大值处设置的图片
//    11.currentMinimumTrackImage : 滑块条最小值处设置的图片
//    12.currentThumbImage: 当前滑块的图片
    
    [slider addTarget:self action:@selector(sliderValueChanged:) forControlEvents:UIControlEventValueChanged];

</code></pre>
<p><img src="https://1hwei.github.io//post-images/1565377862963.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[<带解决>UIAlertView的iOS9⚠️问题]]></title>
        <id>https://1hwei.github.io//post/lessdai-jie-jue-greateruialertview-de-ios9wen-ti</id>
        <link href="https://1hwei.github.io//post/lessdai-jie-jue-greateruialertview-de-ios9wen-ti">
        </link>
        <updated>2019-08-09T14:03:31.000Z</updated>
        <content type="html"><![CDATA[<p>UIAlertView使用方法</p>
<pre><code>    UIAlertView * alert = [[UIAlertView alloc]initWithTitle:nil message:@&quot;小护只接受原创课程提交哦，么么哒~&quot; delegate:nil  cancelButtonTitle:@&quot;知道了&quot; otherButtonTitles:nil, nil];
    [alert show];
</code></pre>
<pre><code>[[[UIAlertView alloc]initWithTitle:@&quot;你好，老师&quot; message:@&quot;听说你的新贴转发了999次&quot; delegate:nil cancelButtonTitle:@&quot;你懂的&quot; otherButtonTitles:nil, nil]show];
</code></pre>
<p>⚠️： 'UIAlertView' is deprecated: first deprecated in iOS 9.0 - UIAlertView is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleAlert instead<br>
解决：</p>
<pre><code>1⃣️：Deoloyment Target 选择8.0
</code></pre>
<p>相似扩展1⃣️：有输入框的提示框<br>
<img src="https://1hwei.github.io//post-images/1565359643246.png" alt=""><br>
相似扩展2⃣️：UIActionSheet<br>
<img src="https://1hwei.github.io//post-images/1565360056692.png" alt=""><br>
相似扩展3⃣️：</p>
<pre><code>    UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil message:@&quot;你传递的信息！&quot; preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *action = [UIAlertAction actionWithTitle:@&quot;Ok&quot; style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
    }];
    
    [alert addAction:action];
    [self presentViewController:alert animated:YES completion:nil];
</code></pre>
<p><img src="https://1hwei.github.io//post-images/1565370515575.gif" alt="gif测试"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[<小知识>hexo搭建的博客如何发博客]]></title>
        <id>https://1hwei.github.io//post/xiaozhishi01</id>
        <link href="https://1hwei.github.io//post/xiaozhishi01">
        </link>
        <updated>2019-08-06T01:47:51.000Z</updated>
        <content type="html"><![CDATA[<p>在hexo根目录下&gt;source/posts下&gt;新建xxx.md文件</p>
<pre><code>、、、
title：标题
、、、

正文
</code></pre>
<p>部署，上传</p>
<pre><code>hexo g -d
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[<待办事件>如何在博客中加载live2d动漫]]></title>
        <id>https://1hwei.github.io//post/lessdai-ban-shi-jian-greaterru-he-zai-bo-ke-zhong-jia-zai-live2d-dong-man</id>
        <link href="https://1hwei.github.io//post/lessdai-ban-shi-jian-greaterru-he-zai-bo-ke-zhong-jia-zai-live2d-dong-man">
        </link>
        <updated>2019-08-05T17:33:39.000Z</updated>
        <content type="html"><![CDATA[<p>https://xiazeyu.github.io/</p>
]]></content>
    </entry>
</feed>